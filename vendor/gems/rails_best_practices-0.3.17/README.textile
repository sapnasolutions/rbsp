h1. rails_best_practices

rails_best_practices is a gem to check quality of rails app files according to ihower's presentation Rails Best Practices from Kungfu RailsConf in Shanghai China.
rails_best_practices is a code static parser tool.

*************************************************

h2. Resources

"ihower's presentation":http://www.slideshare.net/ihower/rails-best-practices
"Wiki":http://wiki.github.com/flyerhzm/rails_best_practices

*************************************************

h2. Install

<pre><code>
sudo gem install rails_best_practices --source http://gemcutter.org
</code></pre>

*************************************************

h2. Usage

At the root directory of rails app

<pre><code>
rails_best_practices .
</code></pre>

notice the period at the end, it can be the relative or absolute path of your rails app.

And default rails_best_practices will do parse codes in vendor, spec, test and stories directories. If you need, see the command options:

<pre><code>
$ rails_best_practices -h
Usage: rails_best_practices [options]
    -d, --debug                      Debug mode
        --vendor                     include vendor files
        --spec                       include spec files
        --test                       include test files
        --stories                    include stories files
    -h, --help                       Show this message
</code></pre>

*************************************************

h2. Issue

If you got NoMethodError or any syntax error, you should use debug mode to detect which file rails_best_practices is parsing and getting the error.

<pre><code>
rails_best_practices -d .
</code></pre>

Then give me the error stack and the source code of the file that rails_best_practices is parsing error.

*************************************************

h2. Customize Configuration

Copy <code>rails_best_practices.yml</code> in the root directory of rails_best_practices gem to <code>config</code> directory
Now you can customize the configuration, the default configuration is as follows:

<pre><code>
MoveFinderToNamedScopeCheck: { }
UseModelAssociationCheck: { }
UseScopeAccessCheck: { }
AddModelVirtualAttributeCheck: { }
# UseModelCallbackCheck: { }
ReplaceComplexCreationWithFactoryMethodCheck: { attribute_assignment_count: 2 }
MoveModelLogicIntoModelCheck: { called_count: 4 }
# ManyToManyCollectionCheck: { }
# NestedModelFormsCheck: { }
OveruseRouteCustomizationsCheck: { customize_count: 3 }
NeedlessDeepNestingCheck: { nested_count: 2 }
NotUseDefaultRouteCheck: {  }
KeepFindersOnTheirOwnModelCheck: { }
LawOfDemeterCheck: { }
UseObserverCheck: { }
IsolateSeedDataCheck: { }
AlwaysAddDbIndexCheck: { }
UseBeforeFilterCheck: { }
MoveCodeIntoControllerCheck: { }
MoveCodeIntoModelCheck: { }
MoveCodeIntoHelperCheck: { array_count: 3 }
ReplaceInstanceVariableWithLocalVariableCheck: { }
</code></pre>

*************************************************

h2. Progress

* Lesson 1. Move code from Controller to Model
## [-Move finder to named_scope-]
## [-Use model association-]
## [-Use scope access-]
## [-Add model virtual attribute-]
## Use model callback
## [-Replace Complex Creation with Factory Method-]
## [-Move Model Logic into the Model-]
## model.collection_model_ids (many-to-many)
## Nested Model Forms (one-to-one)
## Nested Model Forms (one-to-many)

* Lesson 2. RESTful Conventions
## [-Overuse route customizations-]
## [-Needless deep nesting-]
## [-Not use default route-]

* Lesson 3. Model
## [-Keep Finders on Their Own Model-]
## [-Love named_scope-] # same as Move finder to named_scope
## [-the Law of Demeter-]
## DRY: metaprogramming
## Extract into Module
## Extract to composed class
## [-Use Observer-]

* Lesson 4. Migration
## [-Isolating Seed Data-]
## [-Always add DB index-]

* Lesson 5. Controller
## [-Use before_filter-]
## [-DRY Controller-] # not implement, use http://github.com/josevalim/inherited_resources

* Lesson 6. View
## [-Move code into controller-]
## [-Move code into model-]
## [-Move code into helper-]
## [-Replace instance variable with local variable-]
## [-Use Form Builder-] # not implement, use http://github.com/justinfrench/formtastic
## [-Organize Helper files-] # not implement, it's rails default behaviour

*************************************************

h2. Links

"http://railsenvy.com/2009/12/07/rails-envy-podcast-episode-102":http://railsenvy.com/2009/12/07/rails-envy-podcast-episode-102
"http://ruby5.envylabs.com/episodes/29-episode-28-november-17-2009":http://ruby5.envylabs.com/episodes/29-episode-28-november-17-2009

*************************************************

Copyright Â© 2009 Richard Huang (flyerhzm@gmail.com), released under the MIT license
